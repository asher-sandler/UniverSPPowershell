cls
$spTypes = @()
write-host Init
#$spTypes += "Microsoft.Office.Client.Policy.dll"
#$spTypes += "Microsoft.Office.Client.Policy.Portable.dll"
#$spTypes += "Microsoft.Office.Client.TranslationServices.dll"
#$spTypes += "Microsoft.Office.Client.TranslationServices.Portable.dll"

#$spTypes += "Microsoft.SharePoint.Client.DocumentManagement.dll"
#$spTypes += "Microsoft.SharePoint.Client.DocumentManagement.Portable.dll"
#$spTypes += "Microsoft.SharePoint.Client.Portable.dll"

#$spTypes += "Microsoft.SharePoint.Client.Publishing.Portable.dll"

#$spTypes += "Microsoft.SharePoint.Client.Runtime.Portable.dll"
#$spTypes += "Microsoft.SharePoint.Client.Runtime.Windows.dll"
#$spTypes += "Microsoft.SharePoint.Client.Runtime.WindowsPhone.dll"
#$spTypes += "Microsoft.SharePoint.Client.Runtime.WindowsStore.dll"
#$spTypes += "Microsoft.SharePoint.Client.Search.Applications.dll"
#$spTypes += "Microsoft.SharePoint.Client.Search.Applications.Portable.dll"

#$spTypes += "Microsoft.SharePoint.Client.Search.Portable.dll"

#$spTypes += "Microsoft.SharePoint.Client.Taxonomy.Portable.dll"

#$spTypes += "Microsoft.SharePoint.Client.UserProfiles.Portable.dll"
#$spTypes += "Microsoft.SharePoint.Client.WorkflowServices.dll"
#$spTypes += "Microsoft.SharePoint.Client.WorkflowServices.Portable.dll"



$spTypes += "Microsoft.SharePoint.Client.Publishing.dll"
$spTypes += "Microsoft.SharePoint.Client.Runtime.dll"
$spTypes += "Microsoft.SharePoint.Client.Search.dll"
$spTypes += "Microsoft.SharePoint.Client.Taxonomy.dll"
$spTypes += "Microsoft.SharePoint.Client.UserProfiles.dll"
$spTypes += "Microsoft.SharePoint.Client.dll"

#$user = "AsherC@chordmed.com"
$user = "ashersa@ekmd.huji.ac.il"

#$siteURL = "https://fordmed.sharepoint.com/sites/it_helpdesk/ARD"
$siteURL = "https://scholarships2.ekmd.huji.ac.il/home/General/GEN132-2021"

$spPath = 'C:\Program Files\Common Files\microsoft shared\Web Server Extensions\16\ISAPI\'

	#Add-Type -Path ($spPath+"Microsoft.SharePoint.Client.UserProfiles.dll")
	#Add-Type -Path ($spPath+"Microsoft.SharePoint.Client.Taxonomy.dll")
	#Add-Type -Path ($spPath+"Microsoft.SharePoint.Client.Search.dll")
	#Add-Type -Path ($spPath+"Microsoft.SharePoint.Client.Runtime.dll")
	#Add-Type -Path ($spPath+"Microsoft.SharePoint.Client.Publishing.dll")
	#Add-Type -Path ($spPath+"Microsoft.SharePoint.Client.dll")
    

foreach ($dll in $spTypes)
{
	Add-Type -Path ($spPath+$dll)
}

Write-Host Password
$pwd = read-host -Prompt "Please enter your password" -AsSecureString
$creds = New-Object Microsoft.SharePoint.Client.SharepointOnlineCredentials ($user, $pwd)

$Context = New-Object Microsoft.SharePoint.Client.ClientContext($siteURL)
$Context.Credentials = $creds

#site properties

write-host site properties

$site = $Context.Site
$Context.Load($site)
$context.ExecuteQuery()
$site.URL
$site.GeoLocation

Write-Host List Cities
#list properties
write-host list properties
$spListCities = $Context.Web.Lists.GetByTitle("Cities")
$Context.Load($spListCities)

$context.ExecuteQuery()
$spListCities.ItemCount

$spListCities.Title


Write-Host Delete Fruits

#delete Fruit List if Exists
#Delete List
$list = $context.Web.Lists.GetByTitle('Fruits')
$Context.Load($list)

$context.ExecuteQuery()
if (![String]::IsNullOrEmpty($list.Title)){

    Write-Host "Name of List: "+$list.Title
    Write-Host "Deleting..."
    $List.AllowDeletion = $True
    $List.Update()
    $context.ExecuteQuery()
              
    #Delete the List - Send to Recycle bin
    $List.Recycle() | Out-Null 
    $context.ExecuteQuery()
}


#Read more: https://www.sharepointdiary.com/2016/10/sharepoint-online-delete-list-using-powershell.html#ixzz5wT0plsiR


#$context.Load($list)
#$list.DeleteObject()
#$list.Update()

Write-Host Add Fruits List
#Add Fruit List
$listInfo = new-object Microsoft.SharePoint.Client.ListCreationInformation

$listInfo.Title="Fruits"
$listInfo.Description="All About Fruits"


Write-Host 122
$spListType=new-object Microsoft.SharePoint.Client.ListTemplateType
$spListType.value__=100
#$listInfo.ListTemplate=$spListType # [Microsoft.SharePoint.Client.ListTemplateType]::GenericList
$listTemplate = [Microsoft.SharePoint.Client.ListTemplateType]'GenericList'
$listInfo.TemplateType=$listTemplate
$newFruitsList = $context.Web.Lists.Add($listInfo)
$context.ExecuteQuery()

Write-Host 131
#Add Questions
#Question - Multiple Lines of Text
$newFruitsList.Fields.AddFieldAsXml("<Field Type='Note' NumLines='6' DisplayName='Question'/>",$true,[Microsoft.SharePoint.Client.AddFieldOptions]::AddFieldToDefaultView) | Out-Null
Write-Host 135
$newFruitsList.Update()
$Context.ExecuteQuery()

#Answer - Enhanced Rich Text
$a = $newFruitsList.Fields.AddFieldAsXml("<Field Type='Note' RichText='TRUE' RichTextMode='FullHtml' DisplayName='Answer'/>",$true,[Microsoft.SharePoint.Client.AddFieldOptions]::AddFieldToDefaultView)
$a = $newFruitsList.Update()
$a = $Context.ExecuteQuery()

#Question Type - Choice
$a = $newFruitsList.Fields.AddFieldAsXml("<Field Type='Choice' DisplayName='QuestionType'>
                            <CHOICES>
                                <CHOICE>Office 365</CHOICE>
                                <CHOICE>General</CHOICE>
                                <CHOICE>Email</CHOICE>
                                <CHOICE>OneDrive</CHOICE>
                                <CHOICE>SharePoint</CHOICE>
                                <CHOICE>Office Apps</CHOICE>
                                <CHOICE>Office Online</CHOICE>
                                <CHOICE>Other</CHOICE>
                            </CHOICES></Field>",$true,[Microsoft.SharePoint.Client.AddFieldOptions]::AddFieldToDefaultView)
$newFruitsList.Update()
$Context.ExecuteQuery()

Write-Host Create View
#create view

$views = $newFruitsList.views  
$viewInfo = New-Object Microsoft.SharePoint.Client.ViewCreationInformation  
$viewInfo.Title = "Sort By Fruits"  
# $viewInfo.ViewTypeKind = [Microsoft.SharePoint.Client.ViewType]::None  
$viewInfo.ViewFields = @( "Title" , "ID")
$viewInfo.Query = '<OrderBy><FieldRef Name="Title" /></OrderBy>'
$viewInfo.SetAsDefaultView	= $True
$view = $views.Add($viewInfo)  
$Context.load($view)  
$Context.executeQuery()  
write-host $view.Title  

Start-Sleep -Milliseconds 2999

Write-Host Read Fruits New List
$Context = New-Object Microsoft.SharePoint.Client.ClientContext($siteURL)
$Context.Credentials = $creds


#Read the Fruits List
$psListFruits = $context.Web.Lists.GetByTitle("Fruits")
$context.Load($psListFruits)
$Context.ExecuteQuery()


$Views = $psListFruits.Views
$context.Load($Views)
$Context.ExecuteQuery()

foreach($view in $Views)
{
   $view.Title
   $view.DefaultView
   $view.ViewQuery
}


Write-Host Add Items To List
#Add 5 items to Fruits List
$fruits="Apple","Orange","Mango","Kiwi","Pomogranate", "Lemon", "Grape", "Avocado","Banana", "WaterMelon"
foreach ($item in $fruits)
{
    $fruitInfo = New-Object Microsoft.SharePoint.Client.ListItemCreationInformation
    $fruitItem=$psListFruits.AddItem($fruitInfo)
    $fruitItem["Title"] = $item
    $fruitItem.Update()    
}
$Context.ExecuteQuery() 
